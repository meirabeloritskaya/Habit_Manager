name: Django CI/CD

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Set DJANGO_ENV for Testing
        run: echo "DJANGO_ENV=development" >> $GITHUB_ENV

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          sudo service postgresql start
          sudo -u postgres psql -c "ALTER USER postgres PASSWORD '${{ secrets.POSTGRES_PASSWORD }}';"
          sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }};"
          sudo -u postgres psql -c "CREATE ROLE runner WITH LOGIN PASSWORD '${{ secrets.POSTGRES_PASSWORD }}';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.POSTGRES_DB }} TO runner;"
          sudo -u postgres psql -c "GRANT CREATE ON SCHEMA public TO runner;"
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Prune Docker cache
        run: |
          docker builder prune -af
          docker image prune -af

      - name: Generate .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
         
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Verify .env file
        run: |
          echo "### Verifying .env file ###"
          cat .env
      - name: Move .env file to Docker context
        run: mv .env /home/runner/work/Habit_Manager/Habit_Manager/.env

      - name: Set DJANGO_ENV for Production
        run: echo "DJANGO_ENV=production" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        shell: bash
        run: |
          echo "### Logging into Docker Hub ###"
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          echo "### Logged into Docker Hub successfully ###"

      - name: Build Docker Image
        run: docker compose --env-file /home/runner/work/Habit_Manager/Habit_Manager/.env build

      - name: Push Docker Image
        run: docker compose --env-file /home/runner/work/Habit_Manager/Habit_Manager/.env push


      - name: Deploy to Render
        run: |
          echo "### Deploying to Render ###"
          curl -X POST $RENDER_DEPLOY_HOOK
          echo "### Deployment to Render triggered ###"
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}